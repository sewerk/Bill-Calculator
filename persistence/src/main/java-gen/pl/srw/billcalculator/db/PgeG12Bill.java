package pl.srw.billcalculator.db;

import org.greenrobot.greendao.annotation.*;

import pl.srw.billcalculator.db.dao.DaoSession;
import org.greenrobot.greendao.DaoException;

import pl.srw.billcalculator.db.dao.PgeG12BillDao;
import pl.srw.billcalculator.db.dao.PgePricesDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.
/**
 * Entity mapped to table "PGE_G12_BILL".
 */
@Entity(active = true)
public class PgeG12Bill implements Bill {

    @Id(autoincrement = true)
    private Long id;
    private Integer readingDayFrom;
    private Integer readingDayTo;
    private Integer readingNightFrom;
    private Integer readingNightTo;
    private java.util.Date dateFrom;
    private java.util.Date dateTo;
    private Double amountToPay;
    private Long pricesId;

    /** Used to resolve relations */
    @Generated
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    @Generated
    private transient PgeG12BillDao myDao;

    @ToOne(joinProperty = "pricesId")
    private PgePrices pgePrices;

    @Generated
    private transient Long pgePrices__resolvedKey;

    @Generated
    public PgeG12Bill() {
    }

    public PgeG12Bill(Long id) {
        this.id = id;
    }

    @Generated
    public PgeG12Bill(Long id, Integer readingDayFrom, Integer readingDayTo, Integer readingNightFrom, Integer readingNightTo, java.util.Date dateFrom, java.util.Date dateTo, Double amountToPay, Long pricesId) {
        this.id = id;
        this.readingDayFrom = readingDayFrom;
        this.readingDayTo = readingDayTo;
        this.readingNightFrom = readingNightFrom;
        this.readingNightTo = readingNightTo;
        this.dateFrom = dateFrom;
        this.dateTo = dateTo;
        this.amountToPay = amountToPay;
        this.pricesId = pricesId;
    }

    /** called by internal mechanisms, do not call yourself. */
    @Generated
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getPgeG12BillDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getReadingDayFrom() {
        return readingDayFrom;
    }

    public void setReadingDayFrom(Integer readingDayFrom) {
        this.readingDayFrom = readingDayFrom;
    }

    public Integer getReadingDayTo() {
        return readingDayTo;
    }

    public void setReadingDayTo(Integer readingDayTo) {
        this.readingDayTo = readingDayTo;
    }

    public Integer getReadingNightFrom() {
        return readingNightFrom;
    }

    public void setReadingNightFrom(Integer readingNightFrom) {
        this.readingNightFrom = readingNightFrom;
    }

    public Integer getReadingNightTo() {
        return readingNightTo;
    }

    public void setReadingNightTo(Integer readingNightTo) {
        this.readingNightTo = readingNightTo;
    }

    public java.util.Date getDateFrom() {
        return dateFrom;
    }

    public void setDateFrom(java.util.Date dateFrom) {
        this.dateFrom = dateFrom;
    }

    public java.util.Date getDateTo() {
        return dateTo;
    }

    public void setDateTo(java.util.Date dateTo) {
        this.dateTo = dateTo;
    }

    public Double getAmountToPay() {
        return amountToPay;
    }

    public void setAmountToPay(Double amountToPay) {
        this.amountToPay = amountToPay;
    }

    public Long getPricesId() {
        return pricesId;
    }

    public void setPricesId(Long pricesId) {
        this.pricesId = pricesId;
    }

    /** To-one relationship, resolved on first access. */
    @Generated
    public PgePrices getPgePrices() {
        Long __key = this.pricesId;
        if (pgePrices__resolvedKey == null || !pgePrices__resolvedKey.equals(__key)) {
            __throwIfDetached();
            PgePricesDao targetDao = daoSession.getPgePricesDao();
            PgePrices pgePricesNew = targetDao.load(__key);
            synchronized (this) {
                pgePrices = pgePricesNew;
            	pgePrices__resolvedKey = __key;
            }
        }
        return pgePrices;
    }

    @Generated
    public void setPgePrices(PgePrices pgePrices) {
        synchronized (this) {
            this.pgePrices = pgePrices;
            pricesId = pgePrices == null ? null : pgePrices.getId();
            pgePrices__resolvedKey = pricesId;
        }
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void delete() {
        __throwIfDetached();
        myDao.delete(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void update() {
        __throwIfDetached();
        myDao.update(this);
    }

    /**
    * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
    * Entity must attached to an entity context.
    */
    @Generated
    public void refresh() {
        __throwIfDetached();
        myDao.refresh(this);
    }

    @Generated
    private void __throwIfDetached() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }
    }

    @Override
    public String toString() {
        return "PgeG12Bill{" +
                "id=" + id +
                ", readingDayFrom=" + readingDayFrom +
                ", readingDayTo=" + readingDayTo +
                ", readingNightFrom=" + readingNightFrom +
                ", readingNightTo=" + readingNightTo +
                ", dateFrom=" + dateFrom +
                ", dateTo=" + dateTo +
                ", amountToPay=" + amountToPay +
                ", pricesId=" + pricesId +
                ", daoSession=" + daoSession +
                ", myDao=" + myDao +
                ", pgePrices=" + pgePrices +
                ", pgePrices__resolvedKey=" + pgePrices__resolvedKey +
                '}';
    }
}
