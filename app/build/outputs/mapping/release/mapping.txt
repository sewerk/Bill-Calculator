butterknife.ButterKnife -> butterknife.ButterKnife:
    boolean debug -> d
    java.util.Map INJECTORS -> a
    java.util.Map RESETTERS -> b
    java.lang.reflect.Method NO_OP -> c
    void inject(android.app.Activity) -> a
    void inject(java.lang.Object,java.lang.Object,butterknife.ButterKnife$Finder) -> a
    java.lang.reflect.Method findInjectorForClass(java.lang.Class) -> a
butterknife.ButterKnife$1 -> butterknife.ButterKnife$1:
butterknife.ButterKnife$Finder -> butterknife.ButterKnife$Finder:
    butterknife.ButterKnife$Finder VIEW -> a
    butterknife.ButterKnife$Finder ACTIVITY -> b
    butterknife.ButterKnife$Finder DIALOG -> c
    butterknife.ButterKnife$Finder[] $VALUES -> d
    butterknife.ButterKnife$Finder[] values() -> values
    butterknife.ButterKnife$Finder valueOf(java.lang.String) -> valueOf
    android.view.View findRequiredView(java.lang.Object,int,java.lang.String) -> a
    android.view.View findOptionalView(java.lang.Object,int) -> a
butterknife.ButterKnife$Finder$1 -> butterknife.ButterKnife$Finder$1:
    android.view.View findOptionalView(java.lang.Object,int) -> a
butterknife.ButterKnife$Finder$2 -> butterknife.ButterKnife$Finder$2:
    android.view.View findOptionalView(java.lang.Object,int) -> a
butterknife.ButterKnife$Finder$3 -> butterknife.ButterKnife$Finder$3:
    android.view.View findOptionalView(java.lang.Object,int) -> a
com.daimajia.androidanimations.library.BaseViewAnimator -> com.daimajia.androidanimations.library.BaseViewAnimator:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    long mDuration -> b
    void prepare(android.view.View) -> a
    void animate(android.view.View) -> b
    void reset(android.view.View) -> c
    void start() -> a
    com.daimajia.androidanimations.library.BaseViewAnimator setDuration(long) -> a
    com.daimajia.androidanimations.library.BaseViewAnimator setStartDelay(long) -> b
    com.daimajia.androidanimations.library.BaseViewAnimator addAnimatorListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    com.daimajia.androidanimations.library.BaseViewAnimator setInterpolator(android.view.animation.Interpolator) -> a
    long getDuration() -> b
    com.nineoldandroids.animation.AnimatorSet getAnimatorAgent() -> c
com.daimajia.androidanimations.library.Techniques -> com.daimajia.androidanimations.library.Techniques:
    com.daimajia.androidanimations.library.Techniques DropOut -> a
    com.daimajia.androidanimations.library.Techniques Landing -> b
    com.daimajia.androidanimations.library.Techniques TakingOff -> c
    com.daimajia.androidanimations.library.Techniques Flash -> d
    com.daimajia.androidanimations.library.Techniques Pulse -> e
    com.daimajia.androidanimations.library.Techniques RubberBand -> f
    com.daimajia.androidanimations.library.Techniques Shake -> g
    com.daimajia.androidanimations.library.Techniques Swing -> h
    com.daimajia.androidanimations.library.Techniques Wobble -> i
    com.daimajia.androidanimations.library.Techniques Bounce -> j
    com.daimajia.androidanimations.library.Techniques Tada -> k
    com.daimajia.androidanimations.library.Techniques StandUp -> l
    com.daimajia.androidanimations.library.Techniques Wave -> m
    com.daimajia.androidanimations.library.Techniques Hinge -> n
    com.daimajia.androidanimations.library.Techniques RollIn -> o
    com.daimajia.androidanimations.library.Techniques RollOut -> p
    com.daimajia.androidanimations.library.Techniques BounceIn -> q
    com.daimajia.androidanimations.library.Techniques BounceInDown -> r
    com.daimajia.androidanimations.library.Techniques BounceInLeft -> s
    com.daimajia.androidanimations.library.Techniques BounceInRight -> t
    com.daimajia.androidanimations.library.Techniques BounceInUp -> u
    com.daimajia.androidanimations.library.Techniques FadeIn -> v
    com.daimajia.androidanimations.library.Techniques FadeInUp -> w
    com.daimajia.androidanimations.library.Techniques FadeInDown -> x
    com.daimajia.androidanimations.library.Techniques FadeInLeft -> y
    com.daimajia.androidanimations.library.Techniques FadeInRight -> z
    com.daimajia.androidanimations.library.Techniques FadeOut -> A
    com.daimajia.androidanimations.library.Techniques FadeOutDown -> B
    com.daimajia.androidanimations.library.Techniques FadeOutLeft -> C
    com.daimajia.androidanimations.library.Techniques FadeOutRight -> D
    com.daimajia.androidanimations.library.Techniques FadeOutUp -> E
    com.daimajia.androidanimations.library.Techniques FlipInX -> F
    com.daimajia.androidanimations.library.Techniques FlipOutX -> G
    com.daimajia.androidanimations.library.Techniques FlipOutY -> H
    com.daimajia.androidanimations.library.Techniques RotateIn -> I
    com.daimajia.androidanimations.library.Techniques RotateInDownLeft -> J
    com.daimajia.androidanimations.library.Techniques RotateInDownRight -> K
    com.daimajia.androidanimations.library.Techniques RotateInUpLeft -> L
    com.daimajia.androidanimations.library.Techniques RotateInUpRight -> M
    com.daimajia.androidanimations.library.Techniques RotateOut -> N
    com.daimajia.androidanimations.library.Techniques RotateOutDownLeft -> O
    com.daimajia.androidanimations.library.Techniques RotateOutDownRight -> P
    com.daimajia.androidanimations.library.Techniques RotateOutUpLeft -> Q
    com.daimajia.androidanimations.library.Techniques RotateOutUpRight -> R
    com.daimajia.androidanimations.library.Techniques SlideInLeft -> S
    com.daimajia.androidanimations.library.Techniques SlideInRight -> T
    com.daimajia.androidanimations.library.Techniques SlideInUp -> U
    com.daimajia.androidanimations.library.Techniques SlideInDown -> V
    com.daimajia.androidanimations.library.Techniques SlideOutLeft -> W
    com.daimajia.androidanimations.library.Techniques SlideOutRight -> X
    com.daimajia.androidanimations.library.Techniques SlideOutUp -> Y
    com.daimajia.androidanimations.library.Techniques SlideOutDown -> Z
    com.daimajia.androidanimations.library.Techniques ZoomIn -> aa
    com.daimajia.androidanimations.library.Techniques ZoomInDown -> ab
    com.daimajia.androidanimations.library.Techniques ZoomInLeft -> ac
    com.daimajia.androidanimations.library.Techniques ZoomInRight -> ad
    com.daimajia.androidanimations.library.Techniques ZoomInUp -> ae
    com.daimajia.androidanimations.library.Techniques ZoomOut -> af
    com.daimajia.androidanimations.library.Techniques ZoomOutDown -> ag
    com.daimajia.androidanimations.library.Techniques ZoomOutLeft -> ah
    com.daimajia.androidanimations.library.Techniques ZoomOutRight -> ai
    com.daimajia.androidanimations.library.Techniques ZoomOutUp -> aj
    java.lang.Class animatorClazz -> ak
    com.daimajia.androidanimations.library.Techniques[] $VALUES -> al
    com.daimajia.androidanimations.library.Techniques[] values() -> values
    com.daimajia.androidanimations.library.Techniques valueOf(java.lang.String) -> valueOf
    com.daimajia.androidanimations.library.BaseViewAnimator getAnimator() -> a
com.daimajia.androidanimations.library.YoYo -> com.daimajia.androidanimations.library.YoYo:
    com.daimajia.androidanimations.library.Techniques techniques -> a
    long duration -> b
    long delay -> c
    android.view.animation.Interpolator interpolator -> d
    java.util.List callbacks -> e
    android.view.View target -> f
    com.daimajia.androidanimations.library.YoYo$AnimationComposer with(com.daimajia.androidanimations.library.Techniques) -> a
    com.daimajia.androidanimations.library.BaseViewAnimator play() -> a
    com.daimajia.androidanimations.library.BaseViewAnimator access$800(com.daimajia.androidanimations.library.YoYo) -> a
com.daimajia.androidanimations.library.YoYo$1 -> com.daimajia.androidanimations.library.YoYo$1:
com.daimajia.androidanimations.library.YoYo$AnimationComposer -> com.daimajia.androidanimations.library.YoYo$AnimationComposer:
    java.util.List callbacks -> a
    com.daimajia.androidanimations.library.Techniques techniques -> b
    long duration -> c
    long delay -> d
    android.view.animation.Interpolator interpolator -> e
    android.view.View target -> f
    com.daimajia.androidanimations.library.YoYo$AnimationComposer duration(long) -> a
    com.daimajia.androidanimations.library.YoYo$YoYoString playOn(android.view.View) -> a
    com.daimajia.androidanimations.library.Techniques access$000(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> a
    long access$100(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> b
    long access$200(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> c
    android.view.animation.Interpolator access$300(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> d
    java.util.List access$400(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> e
    android.view.View access$500(com.daimajia.androidanimations.library.YoYo$AnimationComposer) -> f
com.daimajia.androidanimations.library.YoYo$YoYoString -> com.daimajia.androidanimations.library.YoYo$YoYoString:
    com.daimajia.androidanimations.library.BaseViewAnimator animator -> a
    android.view.View target -> b
com.daimajia.androidanimations.library.attention.BounceAnimator -> com.daimajia.androidanimations.library.attention.BounceAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.FlashAnimator -> com.daimajia.androidanimations.library.attention.FlashAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.PulseAnimator -> com.daimajia.androidanimations.library.attention.PulseAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.RubberBandAnimator -> com.daimajia.androidanimations.library.attention.RubberBandAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.ShakeAnimator -> com.daimajia.androidanimations.library.attention.ShakeAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.StandUpAnimator -> com.daimajia.androidanimations.library.attention.StandUpAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.SwingAnimator -> com.daimajia.androidanimations.library.attention.SwingAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.TadaAnimator -> com.daimajia.androidanimations.library.attention.TadaAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.WaveAnimator -> com.daimajia.androidanimations.library.attention.WaveAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.attention.WobbleAnimator -> com.daimajia.androidanimations.library.attention.WobbleAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInAnimator -> com.daimajia.androidanimations.library.bouncing_entrances.BounceInAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInDownAnimator -> com.daimajia.androidanimations.library.bouncing_entrances.BounceInDownAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInLeftAnimator -> com.daimajia.androidanimations.library.bouncing_entrances.BounceInLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInRightAnimator -> com.daimajia.androidanimations.library.bouncing_entrances.BounceInRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.bouncing_entrances.BounceInUpAnimator -> com.daimajia.androidanimations.library.bouncing_entrances.BounceInUpAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInAnimator -> com.daimajia.androidanimations.library.fading_entrances.FadeInAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInDownAnimator -> com.daimajia.androidanimations.library.fading_entrances.FadeInDownAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInLeftAnimator -> com.daimajia.androidanimations.library.fading_entrances.FadeInLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInRightAnimator -> com.daimajia.androidanimations.library.fading_entrances.FadeInRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_entrances.FadeInUpAnimator -> com.daimajia.androidanimations.library.fading_entrances.FadeInUpAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutAnimator -> com.daimajia.androidanimations.library.fading_exits.FadeOutAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutDownAnimator -> com.daimajia.androidanimations.library.fading_exits.FadeOutDownAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutLeftAnimator -> com.daimajia.androidanimations.library.fading_exits.FadeOutLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutRightAnimator -> com.daimajia.androidanimations.library.fading_exits.FadeOutRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.fading_exits.FadeOutUpAnimator -> com.daimajia.androidanimations.library.fading_exits.FadeOutUpAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.flippers.FlipInXAnimator -> com.daimajia.androidanimations.library.flippers.FlipInXAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.flippers.FlipOutXAnimator -> com.daimajia.androidanimations.library.flippers.FlipOutXAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.flippers.FlipOutYAnimator -> com.daimajia.androidanimations.library.flippers.FlipOutYAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInAnimator -> com.daimajia.androidanimations.library.rotating_entrances.RotateInAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInDownLeftAnimator -> com.daimajia.androidanimations.library.rotating_entrances.RotateInDownLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInDownRightAnimator -> com.daimajia.androidanimations.library.rotating_entrances.RotateInDownRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInUpLeftAnimator -> com.daimajia.androidanimations.library.rotating_entrances.RotateInUpLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_entrances.RotateInUpRightAnimator -> com.daimajia.androidanimations.library.rotating_entrances.RotateInUpRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutAnimator -> com.daimajia.androidanimations.library.rotating_exits.RotateOutAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutDownLeftAnimator -> com.daimajia.androidanimations.library.rotating_exits.RotateOutDownLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutDownRightAnimator -> com.daimajia.androidanimations.library.rotating_exits.RotateOutDownRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutUpLeftAnimator -> com.daimajia.androidanimations.library.rotating_exits.RotateOutUpLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.rotating_exits.RotateOutUpRightAnimator -> com.daimajia.androidanimations.library.rotating_exits.RotateOutUpRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideInDownAnimator -> com.daimajia.androidanimations.library.sliders.SlideInDownAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideInLeftAnimator -> com.daimajia.androidanimations.library.sliders.SlideInLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideInRightAnimator -> com.daimajia.androidanimations.library.sliders.SlideInRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideInUpAnimator -> com.daimajia.androidanimations.library.sliders.SlideInUpAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideOutDownAnimator -> com.daimajia.androidanimations.library.sliders.SlideOutDownAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideOutLeftAnimator -> com.daimajia.androidanimations.library.sliders.SlideOutLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideOutRightAnimator -> com.daimajia.androidanimations.library.sliders.SlideOutRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.sliders.SlideOutUpAnimator -> com.daimajia.androidanimations.library.sliders.SlideOutUpAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.HingeAnimator -> com.daimajia.androidanimations.library.specials.HingeAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.RollInAnimator -> com.daimajia.androidanimations.library.specials.RollInAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.RollOutAnimator -> com.daimajia.androidanimations.library.specials.RollOutAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.in.DropOutAnimator -> com.daimajia.androidanimations.library.specials.in.DropOutAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.in.LandingAnimator -> com.daimajia.androidanimations.library.specials.in.LandingAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.specials.out.TakingOffAnimator -> com.daimajia.androidanimations.library.specials.out.TakingOffAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInAnimator -> com.daimajia.androidanimations.library.zooming_entrances.ZoomInAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInDownAnimator -> com.daimajia.androidanimations.library.zooming_entrances.ZoomInDownAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInLeftAnimator -> com.daimajia.androidanimations.library.zooming_entrances.ZoomInLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInRightAnimator -> com.daimajia.androidanimations.library.zooming_entrances.ZoomInRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_entrances.ZoomInUpAnimator -> com.daimajia.androidanimations.library.zooming_entrances.ZoomInUpAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutAnimator -> com.daimajia.androidanimations.library.zooming_exits.ZoomOutAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutDownAnimator -> com.daimajia.androidanimations.library.zooming_exits.ZoomOutDownAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutLeftAnimator -> com.daimajia.androidanimations.library.zooming_exits.ZoomOutLeftAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutRightAnimator -> com.daimajia.androidanimations.library.zooming_exits.ZoomOutRightAnimator:
    void prepare(android.view.View) -> a
com.daimajia.androidanimations.library.zooming_exits.ZoomOutUpAnimator -> com.daimajia.androidanimations.library.zooming_exits.ZoomOutUpAnimator:
    void prepare(android.view.View) -> a
com.daimajia.easing.BaseEasingMethod -> com.daimajia.easing.BaseEasingMethod:
    float mDuration -> a
    java.util.ArrayList mListeners -> b
    void addEasingListeners(com.daimajia.easing.BaseEasingMethod$EasingListener[]) -> a
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> a
    java.lang.Float calculate(float,float,float,float) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.daimajia.easing.BaseEasingMethod$EasingListener -> com.daimajia.easing.BaseEasingMethod$EasingListener:
    void on(float,float,float,float,float) -> a
com.daimajia.easing.Glider -> com.daimajia.easing.Glider:
    com.nineoldandroids.animation.ValueAnimator glide(com.daimajia.easing.Skill,float,com.nineoldandroids.animation.ValueAnimator) -> a
    com.nineoldandroids.animation.ValueAnimator glide(com.daimajia.easing.Skill,float,com.nineoldandroids.animation.ValueAnimator,com.daimajia.easing.BaseEasingMethod$EasingListener[]) -> a
com.daimajia.easing.Skill -> com.daimajia.easing.Skill:
    com.daimajia.easing.Skill BackEaseIn -> a
    com.daimajia.easing.Skill BackEaseOut -> b
    com.daimajia.easing.Skill BackEaseInOut -> c
    com.daimajia.easing.Skill BounceEaseIn -> d
    com.daimajia.easing.Skill BounceEaseOut -> e
    com.daimajia.easing.Skill BounceEaseInOut -> f
    com.daimajia.easing.Skill CircEaseIn -> g
    com.daimajia.easing.Skill CircEaseOut -> h
    com.daimajia.easing.Skill CircEaseInOut -> i
    com.daimajia.easing.Skill CubicEaseIn -> j
    com.daimajia.easing.Skill CubicEaseOut -> k
    com.daimajia.easing.Skill CubicEaseInOut -> l
    com.daimajia.easing.Skill ElasticEaseIn -> m
    com.daimajia.easing.Skill ElasticEaseOut -> n
    com.daimajia.easing.Skill ExpoEaseIn -> o
    com.daimajia.easing.Skill ExpoEaseOut -> p
    com.daimajia.easing.Skill ExpoEaseInOut -> q
    com.daimajia.easing.Skill QuadEaseIn -> r
    com.daimajia.easing.Skill QuadEaseOut -> s
    com.daimajia.easing.Skill QuadEaseInOut -> t
    com.daimajia.easing.Skill QuintEaseIn -> u
    com.daimajia.easing.Skill QuintEaseOut -> v
    com.daimajia.easing.Skill QuintEaseInOut -> w
    com.daimajia.easing.Skill SineEaseIn -> x
    com.daimajia.easing.Skill SineEaseOut -> y
    com.daimajia.easing.Skill SineEaseInOut -> z
    com.daimajia.easing.Skill Linear -> A
    java.lang.Class easingMethod -> B
    com.daimajia.easing.Skill[] $VALUES -> C
    com.daimajia.easing.Skill[] values() -> values
    com.daimajia.easing.Skill valueOf(java.lang.String) -> valueOf
    com.daimajia.easing.BaseEasingMethod getMethod(float) -> a
com.daimajia.easing.back.BackEaseIn -> com.daimajia.easing.back.BackEaseIn:
    float s -> b
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.back.BackEaseInOut -> com.daimajia.easing.back.BackEaseInOut:
    float s -> b
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.back.BackEaseOut -> com.daimajia.easing.back.BackEaseOut:
    float s -> b
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.bounce.BounceEaseIn -> com.daimajia.easing.bounce.BounceEaseIn:
    com.daimajia.easing.bounce.BounceEaseOut mBounceEaseOut -> b
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.bounce.BounceEaseInOut -> com.daimajia.easing.bounce.BounceEaseInOut:
    com.daimajia.easing.bounce.BounceEaseOut mBounceEaseOut -> b
    com.daimajia.easing.bounce.BounceEaseIn mBounceEaseIn -> c
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.bounce.BounceEaseOut -> com.daimajia.easing.bounce.BounceEaseOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.circ.CircEaseIn -> com.daimajia.easing.circ.CircEaseIn:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.circ.CircEaseInOut -> com.daimajia.easing.circ.CircEaseInOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.circ.CircEaseOut -> com.daimajia.easing.circ.CircEaseOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.cubic.CubicEaseIn -> com.daimajia.easing.cubic.CubicEaseIn:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.cubic.CubicEaseInOut -> com.daimajia.easing.cubic.CubicEaseInOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.cubic.CubicEaseOut -> com.daimajia.easing.cubic.CubicEaseOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.elastic.ElasticEaseIn -> com.daimajia.easing.elastic.ElasticEaseIn:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.elastic.ElasticEaseOut -> com.daimajia.easing.elastic.ElasticEaseOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.expo.ExpoEaseIn -> com.daimajia.easing.expo.ExpoEaseIn:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.expo.ExpoEaseInOut -> com.daimajia.easing.expo.ExpoEaseInOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.expo.ExpoEaseOut -> com.daimajia.easing.expo.ExpoEaseOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.linear.Linear -> com.daimajia.easing.linear.Linear:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quad.QuadEaseIn -> com.daimajia.easing.quad.QuadEaseIn:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quad.QuadEaseInOut -> com.daimajia.easing.quad.QuadEaseInOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quad.QuadEaseOut -> com.daimajia.easing.quad.QuadEaseOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quint.QuintEaseIn -> com.daimajia.easing.quint.QuintEaseIn:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quint.QuintEaseInOut -> com.daimajia.easing.quint.QuintEaseInOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.quint.QuintEaseOut -> com.daimajia.easing.quint.QuintEaseOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.sine.SineEaseIn -> com.daimajia.easing.sine.SineEaseIn:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.sine.SineEaseInOut -> com.daimajia.easing.sine.SineEaseInOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.daimajia.easing.sine.SineEaseOut -> com.daimajia.easing.sine.SineEaseOut:
    java.lang.Float calculate(float,float,float,float) -> a
com.nineoldandroids.animation.Animator -> com.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> a
    void start() -> a
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    void setInterpolator(android.view.animation.Interpolator) -> a
    void addListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    void removeListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> b
    java.util.ArrayList getListeners() -> b
    com.nineoldandroids.animation.Animator clone() -> c
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Animator$AnimatorListener -> com.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
com.nineoldandroids.animation.AnimatorListenerAdapter -> com.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet -> com.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    void playTogether(com.nineoldandroids.animation.Animator[]) -> a
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.animation.AnimatorSet$Builder play(com.nineoldandroids.animation.Animator) -> a
    void setStartDelay(long) -> b
    com.nineoldandroids.animation.AnimatorSet setDuration(long) -> c
    void start() -> a
    com.nineoldandroids.animation.AnimatorSet clone() -> d
    void sortNodes() -> e
    com.nineoldandroids.animation.Animator clone() -> c
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$200(com.nineoldandroids.animation.AnimatorSet) -> c
    boolean access$302(com.nineoldandroids.animation.AnimatorSet,boolean) -> a
    java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet) -> d
com.nineoldandroids.animation.AnimatorSet$1 -> com.nineoldandroids.animation.AnimatorSet$1:
    boolean canceled -> a
    java.util.ArrayList val$nodesToStart -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet$Builder -> com.nineoldandroids.animation.AnimatorSet$Builder:
    com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.nineoldandroids.animation.AnimatorSet$Builder with(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet$Dependency -> com.nineoldandroids.animation.AnimatorSet$Dependency:
    com.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.nineoldandroids.animation.AnimatorSet$DependencyListener:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
    void startIfReady(com.nineoldandroids.animation.Animator) -> d
com.nineoldandroids.animation.AnimatorSet$Node -> com.nineoldandroids.animation.AnimatorSet$Node:
    com.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.FloatEvaluator -> com.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.FloatKeyframeSet -> com.nineoldandroids.animation.FloatKeyframeSet:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> a
    float getFloatValue(float) -> b
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.Keyframe -> com.nineoldandroids.animation.Keyframe:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    com.nineoldandroids.animation.Keyframe ofFloat(float) -> a
    boolean hasValue() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    float getFraction() -> c
    android.view.animation.Interpolator getInterpolator() -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> d
    float getFloatValue() -> f
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> g
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> a
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> a
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> a
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.nineoldandroids.animation.ObjectAnimator:
    java.util.Map PROXY_PROPERTIES -> h
    java.lang.Object mTarget -> i
    java.lang.String mPropertyName -> j
    com.nineoldandroids.util.Property mProperty -> k
    void setPropertyName(java.lang.String) -> a
    void setProperty(com.nineoldandroids.util.Property) -> a
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    void start() -> a
    void initAnimation() -> d
    com.nineoldandroids.animation.ObjectAnimator setDuration(long) -> b
    void animateValue(float) -> a
    com.nineoldandroids.animation.ObjectAnimator clone() -> e
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> f
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> c
    com.nineoldandroids.animation.Animator clone() -> c
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.nineoldandroids.animation.PreHoneycombCompat:
    com.nineoldandroids.util.Property ALPHA -> a
    com.nineoldandroids.util.Property PIVOT_X -> b
    com.nineoldandroids.util.Property PIVOT_Y -> c
    com.nineoldandroids.util.Property TRANSLATION_X -> d
    com.nineoldandroids.util.Property TRANSLATION_Y -> e
    com.nineoldandroids.util.Property ROTATION -> f
    com.nineoldandroids.util.Property ROTATION_X -> g
    com.nineoldandroids.util.Property ROTATION_Y -> h
    com.nineoldandroids.util.Property SCALE_X -> i
    com.nineoldandroids.util.Property SCALE_Y -> j
    com.nineoldandroids.util.Property SCROLL_X -> k
    com.nineoldandroids.util.Property SCROLL_Y -> l
    com.nineoldandroids.util.Property X -> m
    com.nineoldandroids.util.Property Y -> n
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.nineoldandroids.animation.PreHoneycombCompat$1:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.nineoldandroids.animation.PreHoneycombCompat$10:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.nineoldandroids.animation.PreHoneycombCompat$11:
    java.lang.Integer get(android.view.View) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.nineoldandroids.animation.PreHoneycombCompat$12:
    java.lang.Integer get(android.view.View) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.nineoldandroids.animation.PreHoneycombCompat$13:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.nineoldandroids.animation.PreHoneycombCompat$14:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.nineoldandroids.animation.PreHoneycombCompat$2:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.nineoldandroids.animation.PreHoneycombCompat$3:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.nineoldandroids.animation.PreHoneycombCompat$4:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.nineoldandroids.animation.PreHoneycombCompat$5:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.nineoldandroids.animation.PreHoneycombCompat$6:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.nineoldandroids.animation.PreHoneycombCompat$7:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.nineoldandroids.animation.PreHoneycombCompat$8:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.nineoldandroids.animation.PreHoneycombCompat$9:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> a
    com.nineoldandroids.util.Property mProperty -> b
    java.lang.reflect.Method mSetter -> c
    java.lang.reflect.Method mGetter -> h
    java.lang.Class mValueType -> d
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> e
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> i
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> j
    java.lang.Class[] FLOAT_VARIANTS -> k
    java.lang.Class[] INTEGER_VARIANTS -> l
    java.lang.Class[] DOUBLE_VARIANTS -> m
    java.util.HashMap sSetterPropertyMap -> n
    java.util.HashMap sGetterPropertyMap -> o
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> f
    java.lang.Object[] mTmpValueArray -> g
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> p
    java.lang.Object mAnimatedValue -> q
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]) -> a
    void setFloatValues(float[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupGetter(java.lang.Class) -> b
    void setupSetterAndGetter(java.lang.Object) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> a
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    void setProperty(com.nineoldandroids.util.Property) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$1 -> com.nineoldandroids.animation.PropertyValuesHolder$1:
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.nineoldandroids.util.FloatProperty mFloatProperty -> j
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> h
    float mFloatAnimatedValue -> i
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TypeEvaluator -> com.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.ValueAnimator -> com.nineoldandroids.animation.ValueAnimator:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> o
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> p
    boolean mPlayingBackwards -> q
    int mCurrentIteration -> r
    float mCurrentFraction -> s
    boolean mStartedDelay -> t
    long mDelayStartTime -> u
    int mPlayingState -> d
    boolean mRunning -> v
    boolean mStarted -> w
    boolean mInitialized -> e
    long mDuration -> x
    long mStartDelay -> y
    long sFrameDelay -> z
    int mRepeatCount -> A
    int mRepeatMode -> B
    android.view.animation.Interpolator mInterpolator -> C
    java.util.ArrayList mUpdateListeners -> D
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    com.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> b
    void setFloatValues(float[]) -> a
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> d
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> c
    void setCurrentPlayTime(long) -> d
    long getCurrentPlayTime() -> g
    void setInterpolator(android.view.animation.Interpolator) -> a
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> a
    void start(boolean) -> a
    void start() -> a
    void endAnimation() -> e
    void startAnimation() -> n
    boolean delayedAnimationFrame(long) -> b
    boolean animationFrame(long) -> e
    void animateValue(float) -> a
    com.nineoldandroids.animation.ValueAnimator clone() -> f
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> c
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> h
    java.lang.ThreadLocal access$100() -> i
    java.lang.ThreadLocal access$200() -> j
    long access$300(com.nineoldandroids.animation.ValueAnimator) -> a
    void access$400(com.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$500() -> k
    java.lang.ThreadLocal access$600() -> l
    boolean access$700(com.nineoldandroids.animation.ValueAnimator,long) -> a
    boolean access$802(com.nineoldandroids.animation.ValueAnimator,boolean) -> a
    void access$900(com.nineoldandroids.animation.ValueAnimator) -> c
    long access$1000() -> m
com.nineoldandroids.animation.ValueAnimator$1 -> com.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.util.FloatProperty -> com.nineoldandroids.util.FloatProperty:
    void setValue(java.lang.Object,float) -> a
    void set(java.lang.Object,java.lang.Float) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.IntProperty -> com.nineoldandroids.util.IntProperty:
    void set(java.lang.Object,java.lang.Integer) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.Property -> com.nineoldandroids.util.Property:
    java.lang.String mName -> a
    java.lang.Class mType -> b
    void set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    java.lang.String getName() -> a
com.nineoldandroids.view.ViewHelper -> com.nineoldandroids.view.ViewHelper:
    void setAlpha(android.view.View,float) -> a
    void setPivotX(android.view.View,float) -> b
    void setPivotY(android.view.View,float) -> c
    void setRotation(android.view.View,float) -> d
    void setRotationX(android.view.View,float) -> e
    void setRotationY(android.view.View,float) -> f
    void setScaleX(android.view.View,float) -> g
    void setScaleY(android.view.View,float) -> h
    void setTranslationX(android.view.View,float) -> i
    void setTranslationY(android.view.View,float) -> j
com.nineoldandroids.view.ViewHelper$Honeycomb -> com.nineoldandroids.view.ViewHelper$Honeycomb:
    void setAlpha(android.view.View,float) -> a
    void setPivotX(android.view.View,float) -> b
    void setPivotY(android.view.View,float) -> c
    void setRotation(android.view.View,float) -> d
    void setRotationX(android.view.View,float) -> e
    void setRotationY(android.view.View,float) -> f
    void setScaleX(android.view.View,float) -> g
    void setScaleY(android.view.View,float) -> h
    void setTranslationX(android.view.View,float) -> i
    void setTranslationY(android.view.View,float) -> j
com.nineoldandroids.view.animation.AnimatorProxy -> com.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    android.graphics.Camera mCamera -> d
    boolean mHasPivot -> e
    float mAlpha -> f
    float mPivotX -> g
    float mPivotY -> h
    float mRotationX -> i
    float mRotationY -> j
    float mRotationZ -> k
    float mScaleX -> l
    float mScaleY -> m
    float mTranslationX -> n
    float mTranslationY -> o
    android.graphics.RectF mBefore -> p
    android.graphics.RectF mAfter -> q
    android.graphics.Matrix mTempMatrix -> r
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    float getPivotX() -> b
    void setPivotX(float) -> b
    float getPivotY() -> c
    void setPivotY(float) -> c
    float getRotation() -> d
    void setRotation(float) -> d
    float getRotationX() -> e
    void setRotationX(float) -> e
    float getRotationY() -> f
    void setRotationY(float) -> f
    float getScaleX() -> g
    void setScaleX(float) -> g
    float getScaleY() -> h
    void setScaleY(float) -> h
    int getScrollX() -> i
    int getScrollY() -> j
    float getTranslationX() -> k
    void setTranslationX(float) -> i
    float getTranslationY() -> l
    void setTranslationY(float) -> j
    float getX() -> m
    void setX(float) -> k
    float getY() -> n
    void setY(float) -> l
    void prepareForUpdate() -> o
    void invalidateAfterUpdate() -> p
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
pl.srw.billcalculator.AboutActivity -> pl.srw.billcalculator.AboutActivity:
    android.widget.TextView tvVersion -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setLicenseLink() -> b
    java.lang.String getApkVersion() -> c
    void sendEmail() -> a
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
pl.srw.billcalculator.AboutActivity$$ViewInjector -> pl.srw.billcalculator.AboutActivity$$ViewInjector:
    void inject(butterknife.ButterKnife$Finder,pl.srw.billcalculator.AboutActivity,java.lang.Object) -> inject
    void reset(pl.srw.billcalculator.AboutActivity) -> reset
pl.srw.billcalculator.AboutActivity$$ViewInjector$1 -> pl.srw.billcalculator.AboutActivity$$ViewInjector$1:
    pl.srw.billcalculator.AboutActivity val$target -> a
    void onClick(android.view.View) -> onClick
pl.srw.billcalculator.BillType -> pl.srw.billcalculator.BillType:
    pl.srw.billcalculator.BillType PGE -> a
    pl.srw.billcalculator.BillType PGNIG -> b
    int drawableId -> c
    pl.srw.billcalculator.BillType[] $VALUES -> d
    pl.srw.billcalculator.BillType[] values() -> values
    pl.srw.billcalculator.BillType valueOf(java.lang.String) -> valueOf
pl.srw.billcalculator.CheckPricesDialogFragment -> pl.srw.billcalculator.CheckPricesDialogFragment:
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    android.content.DialogInterface$OnClickListener positiveClickListener() -> a
    android.content.DialogInterface$OnClickListener negativeClickListener() -> b
    android.content.DialogInterface$OnKeyListener backButtonListener() -> c
    void markDialogProcessed() -> d
    void access$000(pl.srw.billcalculator.CheckPricesDialogFragment) -> a
pl.srw.billcalculator.CheckPricesDialogFragment$1 -> pl.srw.billcalculator.CheckPricesDialogFragment$1:
    pl.srw.billcalculator.CheckPricesDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
pl.srw.billcalculator.CheckPricesDialogFragment$2 -> pl.srw.billcalculator.CheckPricesDialogFragment$2:
    pl.srw.billcalculator.CheckPricesDialogFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
pl.srw.billcalculator.CheckPricesDialogFragment$3 -> pl.srw.billcalculator.CheckPricesDialogFragment$3:
    pl.srw.billcalculator.CheckPricesDialogFragment this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
pl.srw.billcalculator.EnergyBillActivity -> pl.srw.billcalculator.EnergyBillActivity:
    java.math.BigDecimal AKCYZA -> a
    java.math.BigDecimal VAT -> b
    java.math.BigDecimal sumNaleznoscNetto -> c
    java.math.BigDecimal naleznoscBrutto -> d
    java.math.BigDecimal cenaZaEnergieCzynna -> e
    java.math.BigDecimal cenaSkladnikJakosciowy -> f
    java.math.BigDecimal cenaOplataSieciowa -> g
    java.math.BigDecimal cenaOplataPrzejsciowa -> h
    java.math.BigDecimal cenaOplStalaZaPrzesyl -> i
    java.math.BigDecimal cenaOplataAbonamentowa -> j
    java.math.BigDecimal cenaZaEnergieCzynnaDzien -> k
    java.math.BigDecimal cenaZaEnergieCzynnaNoc -> l
    java.math.BigDecimal cenaOplataSieciowaDzien -> m
    java.math.BigDecimal cenaOplataSieciowaNoc -> n
    java.lang.String dateFrom -> o
    java.lang.String dateTo -> p
    int readingFrom -> q
    int readingTo -> r
    int readingDayFrom -> s
    int readingDayTo -> t
    int readingNightFrom -> u
    int readingNightTo -> v
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void readExtra(android.content.Intent) -> a
    void setPrices() -> a
    java.math.BigDecimal getPriceFrom(android.content.SharedPreferences,int,int) -> a
    void setZaOkres() -> b
    void setRozliczenieTable() -> c
    boolean isTaryfaDwustrefowa() -> d
    void setG11Rows(android.widget.TableLayout,int) -> a
    void setG12Rows(android.widget.TableLayout,int,int) -> a
    void setRow(android.view.View,int,int,int,int,int,java.math.BigDecimal) -> a
    void setReadingsInRow(android.view.View,int) -> a
    java.lang.String getNaleznosc(java.math.BigDecimal,int) -> a
    int countZuzycie() -> e
    int countDzienneZuzycie() -> f
    int countNocneZuzycie() -> g
    void setTVInRow(android.view.View,int,int) -> a
    void setTVInRow(android.view.View,int,java.lang.String) -> a
    void setTV(android.widget.TextView,java.lang.String) -> a
    void setTV(int,java.lang.String) -> a
    void setPodsumowanieRozliczenia(android.view.View) -> a
    void setAkcyza() -> h
    void setPodsumowanieTable() -> i
    void setDoZaplaty() -> j
pl.srw.billcalculator.GasBillActivity -> pl.srw.billcalculator.GasBillActivity:
    java.math.BigDecimal VAT -> a
    java.lang.String dateFrom -> b
    java.lang.String dateTo -> c
    int readingFrom -> d
    int readingTo -> e
    java.math.BigDecimal wspKonwersji -> f
    java.math.BigDecimal oplataAbonamentowa -> g
    java.math.BigDecimal paliwoGazowe -> h
    java.math.BigDecimal dystrybucyjnaStala -> i
    java.math.BigDecimal dystrybucyjnaZmienna -> j
    java.math.BigDecimal sumWartoscNetto -> k
    java.math.BigDecimal wartoscBrutto -> l
    java.math.BigDecimal kwotaVat -> m
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setPrices() -> a
    void setOdczytyTable() -> b
    int getZuzycieKWh(int) -> a
    int getZuzycie() -> c
    void setRozliczenieTable() -> d
    void setRow(android.widget.TableLayout,int,int,int,int,java.math.BigDecimal,java.lang.String) -> a
    java.lang.String getWartosc(int,java.math.BigDecimal) -> a
    void setPodsumowanieRozliczenia(android.view.View) -> a
    void setPodsumowanieTable() -> e
    void setWartoscFaktury() -> f
    void setTV(android.view.View,int,java.lang.String) -> a
    void setTV(int,java.lang.String) -> a
    void setTV(android.widget.TextView,java.lang.String) -> a
pl.srw.billcalculator.MainActivity -> pl.srw.billcalculator.MainActivity:
    android.widget.ImageButton bBillType -> a
    android.widget.LinearLayout llReadingG11 -> b
    android.widget.EditText etPreviousReading -> c
    android.widget.EditText etCurrentReading -> d
    android.widget.TableLayout tlReadingsG12 -> e
    android.widget.EditText etDayPreviousReading -> f
    android.widget.EditText etDayCurrentReading -> g
    android.widget.EditText etNightPreviousReading -> h
    android.widget.EditText etNightCurrentReading -> i
    android.widget.Button bFromDate -> j
    android.widget.Button bToDate -> k
    android.widget.TextView etToDateError -> l
    pl.srw.billcalculator.CheckPricesDialogFragment checkPricesDialog -> m
    void onCreate(android.os.Bundle) -> onCreate
    void initValues() -> d
    void initDates() -> e
    void initBillType() -> f
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    pl.srw.billcalculator.BillType restoreBillTypeFrom(android.os.Bundle) -> a
    void onStart() -> onStart
    void chooseReadings() -> g
    void onResume() -> onResume
    boolean isFirstLaunch() -> h
    void showCheckPricesDialog() -> i
    void onPause() -> onPause
    void changeBillType() -> a
    pl.srw.billcalculator.BillType getBillType() -> j
    void setBillType(pl.srw.billcalculator.BillType) -> a
    void showDatePicker(android.widget.Button) -> a
    android.app.DatePickerDialog$OnDateSetListener onDatePickedListener(android.widget.Button) -> b
    java.util.Date readDateFrom(android.widget.Button) -> c
    void calculate() -> b
    boolean validateForm() -> k
    boolean valideteReadings() -> l
    boolean isSingleReadingsVisible() -> m
    boolean validateReadingsG11() -> n
    boolean validateReadingsG12() -> o
    boolean validateMissingValue(android.widget.EditText) -> a
    boolean validateValueOrder(android.widget.EditText,android.widget.EditText) -> a
    void showError(android.widget.EditText,int) -> a
    boolean validateDates() -> p
    void shake(android.view.View) -> a
    void showKeyboard(android.widget.TextView) -> a
    android.content.Intent newBillIntent() -> q
    void fillParameters(android.content.Intent) -> a
    void putStringExtra(android.content.Intent,java.lang.String,android.widget.TextView) -> a
    void putIntExtra(android.content.Intent,java.lang.String,android.widget.TextView) -> b
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void finish() -> finish
    void startAbout() -> r
    void startSettings() -> c
pl.srw.billcalculator.MainActivity$$ViewInjector -> pl.srw.billcalculator.MainActivity$$ViewInjector:
    void inject(butterknife.ButterKnife$Finder,pl.srw.billcalculator.MainActivity,java.lang.Object) -> inject
    void reset(pl.srw.billcalculator.MainActivity) -> reset
pl.srw.billcalculator.MainActivity$$ViewInjector$1 -> pl.srw.billcalculator.MainActivity$$ViewInjector$1:
    pl.srw.billcalculator.MainActivity val$target -> a
    void onClick(android.view.View) -> onClick
pl.srw.billcalculator.MainActivity$$ViewInjector$2 -> pl.srw.billcalculator.MainActivity$$ViewInjector$2:
    pl.srw.billcalculator.MainActivity val$target -> a
    void onClick(android.view.View) -> onClick
pl.srw.billcalculator.MainActivity$$ViewInjector$3 -> pl.srw.billcalculator.MainActivity$$ViewInjector$3:
    pl.srw.billcalculator.MainActivity val$target -> a
    void onClick(android.view.View) -> onClick
pl.srw.billcalculator.MainActivity$$ViewInjector$4 -> pl.srw.billcalculator.MainActivity$$ViewInjector$4:
    pl.srw.billcalculator.MainActivity val$target -> a
    void onClick(android.view.View) -> onClick
pl.srw.billcalculator.MainActivity$1 -> pl.srw.billcalculator.MainActivity$1:
    android.widget.Button val$button -> a
    pl.srw.billcalculator.MainActivity this$0 -> b
    void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
pl.srw.billcalculator.SettingsActivity -> pl.srw.billcalculator.SettingsActivity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
pl.srw.billcalculator.SettingsFragment -> pl.srw.billcalculator.SettingsFragment:
    void onCreate(android.os.Bundle) -> onCreate
    void changePreferenceVisibilityDependingOnTaryfa() -> a
    void setWspKonwersjiDescription() -> b
    void setSummary() -> c
    void onResume() -> onResume
    void onPause() -> onPause
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    void updateSummary(android.content.SharedPreferences,java.lang.String) -> a
    void changeTaryfa(android.content.SharedPreferences,java.lang.String) -> b
pl.srw.billcalculator.SettingsFragment$1 -> pl.srw.billcalculator.SettingsFragment$1:
    pl.srw.billcalculator.SettingsFragment this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
pl.srw.billcalculator.util.Dates -> pl.srw.billcalculator.util.Dates:
    java.util.Date parse(java.lang.String) -> a
    java.lang.String format(int,int,int) -> a
    int countMonth(java.lang.String,java.lang.String) -> a
pl.srw.billcalculator.util.Display -> pl.srw.billcalculator.util.Display:
    java.lang.String withScale(java.math.BigDecimal,int) -> a
    java.lang.String toPay(java.math.BigDecimal) -> a
