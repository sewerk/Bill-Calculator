apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'signing.gradle'

android {
    compileSdkVersion 27
    buildToolsVersion "$buildToolsVer"
    defaultConfig {
        applicationId "pl.srw.billcalculator"
        minSdkVersion 16
        targetSdkVersion 26

        versionCode 30
        versionName "2.0.2"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        resConfig "pl"
    }

    dataBinding {
        enabled = true
    }

    kotlin {
        experimental {
            coroutines 'enable'
        }
    }

    androidExtensions {
        experimental = true
    }

    buildTypes {
        debug {
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    dexOptions {
        jumboMode = true
    }

    packagingOptions {
        pickFirst 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        baseline file('app-lint-baseline.xml')
        disable 'NewerVersionAvailable', 'GradleDependency'
        checkAllWarnings true
        warningsAsErrors true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

check.dependsOn ':detektCheck'

dependencies {

    kapt "com.google.dagger:dagger-compiler:$daggerVer"
    kapt "com.jakewharton:butterknife-compiler:$butterKnifeVer"
    kapt "com.android.databinding:compiler:$gradlePluginVer"

    implementation project(':persistence')
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVer"
    implementation "org.jetbrains.anko:anko-coroutines:$anko_version"
    implementation "com.android.support:design:$supportLibVer"
    implementation "com.android.support:cardview-v7:$supportLibVer"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVer"
    implementation "android.arch.lifecycle:extensions:$archCompVer"

    implementation "com.jakewharton.timber:timber:$timberVer"
    implementation "com.github.sewerk:mfvp:$mfvpVer"
    implementation "com.google.dagger:dagger:$daggerVer"
    implementation "com.jakewharton:butterknife:$butterKnifeVer"
    implementation "com.jakewharton.threetenabp:threetenabp:$threeTenAbpVer"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVer"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVer"
    implementation "com.bluelinelabs:conductor:$conductorVer"
    implementation "com.getkeepsafe.taptargetview:taptargetview:$tapTargetVer"
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlyticsVer@aar") {
        transitive = true
    }

    compileOnly "javax.annotation:jsr250-api:$javaxVer"

    testImplementation "junit:junit:$junitVer"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVer"
    testImplementation "pl.pragmatists:JUnitParams:$junitParamsVer"
    testImplementation "org.threeten:threetenbp:$threeTenVer"
    testImplementation "android.arch.core:core-testing:$archCompVer"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVer"
    androidTestCompileOnly "javax.annotation:jsr250-api:$javaxVer"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVer"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVer"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVer"
    androidTestImplementation "com.android.support:design:$supportLibVer"
    androidTestImplementation "android.arch.core:core-testing:$archCompVer"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakcanaryVer"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVer"
    androidTestImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakcanaryVer"
}
